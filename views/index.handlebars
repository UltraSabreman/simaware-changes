<div id="map" class="d-flex" style="min-height: 0; flex-grow: 1">
    <div class="d-flex" style="justify-content: center; flex-direction: row; position: absolute; left: 0; right: 0; bottom: 70px; z-index: 1199">
        <div id="controls" class="d-flex" style="border: 1px solid rgba(255,255,255,0.2); background-color: #333; font-size: 1rem; color: #888; overflow: hidden">
            <div class="loading py-1" style="z-index: 1199">Loading...</div>
            <div class="map-button py-1 d-none" onclick="toggleBasemap()" style="" id="light"><i class="far fa-lightbulb"></i></div>
            <div class="map-button py-1 d-none" onclick="toggleLabels()" style="" id="labels"><i class="fas fa-tags"></i></div>
            <div class="map-button py-1 d-none" onclick="toggleNexrad()" id="wx"><i class="fas fa-cloud-sun-rain"></i></div>
            <div class="map-button py-1 d-none" onclick="toggleATC()" id="atc">ATC</div>
            <div class="map-button py-1 d-none" onclick="toggleSigmet()" id="sigmet">SIGMET</div>
            {{!-- <div class="map-button py-1 d-none" onclick="toggleNat()" id="nat">NAT</div> --}}
            <div class="map-button py-1 d-none" onclick="toggleStreamers()" id="streamers"><i class="fas fa-podcast"></i></div>
            {{!-- <div class="map-button py-1 d-none" onclick="toggleWorldflight()" id="wf">WORLDFLIGHT</div> --}}
        </div>
    </div>

    <!-- Flight Display Sidebar -->
    {{> flights-sidebar}}

    <!-- Airports Sidebar -->
    {{> airport-sidebar }}

    <!-- Users Sidebar -->
    {{> user-sidebar }}

    <!-- Streamers Bottom Bar -->
    {{> streamers-bar }}

    <!-- Footer Group -->
    {{> footer}}
</div>
<script>

$(document).ready(function() {

    airports = [];
    flights = [];
    manual = false;

    // Airports show everything
    filterName = null;
    filterCriteria = null;

    initialize();
    setInterval(
        async () => { 

            if(new Date().getSeconds() <= 2)
            {
                await refreshATC();
                flights = await refreshFlights(filterName, filterCriteria);
                updateInfobar();
                updateSigmet();
                setLayerOrder();
            }
            else
            {
                interpolateLoc();
            }
            
        }, 2 * 1000);
})

async function initialize()
{
    initializeMap();

    response = await fetch('/livedata/airports.json');
    airports = await response.json();
    flights = await refreshFlights(filterName, filterCriteria);
    eventsByAirport = await loadUpcomingEvents();
    airlines = await loadAirlines();

    await initializeNexrad();
    await initializeNat();
    await initializeATC();
    await initializeAirports();
    await refreshATC();
    await initializeInfobar();
    await updateSigmet();
    await initializePatrons();
    {{!-- initializeWorldFlight(); --}}
    handleCookies();

    // If redirected from another page
    let searchParams = new URLSearchParams(window.location.search);
    if(searchParams.has('uid'))
    {
        zoomToFlight(searchParams.get('uid'));
    }
    else if(searchParams.has('airport'))
    {
        zoomToAirport(searchParams.get('airport'));
    }
    else if(searchParams.has('user'))
    {
        zoomToUser(searchParams.get('user'));
    }
}
</script>